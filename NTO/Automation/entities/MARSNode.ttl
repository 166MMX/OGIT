@prefix ogit.Automation:        <http://www.purl.org/ogit/Automation/> .
@prefix ogit:                   <http://www.purl.org/ogit/> .
@prefix rdfs:                   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ogit.Datacenter:        <http://www.purl.org/ogit/Datacenter/> .
@prefix dcterms:                <http://purl.org/dc/terms/> .

ogit.Automation:MARSNode
	a rdfs:Class;
	rdfs:subClassOf ogit:Entity;
	rdfs:label "MARSNode";
	dcterms:description """IT Objects will be representated in MARS Modell with MARS nodes.
The MARS model builds upon four basic types of objects with a single type of relationship. Basically the objects
which are in fact called \"nodes\" represent both views - the business perspective and the technical view.
The technical components are modeled in the machine and software layers while the application and resource layers
describe the business view of the IT environment.""";
	# For ranges, see http://dublincore.org/documents/dcmi-period/
	dcterms:valid "start=2015-05-21;";
	dcterms:creator "Peter Larem";
	ogit:scope "NTO";
	ogit:parent "http://www.purl.org/ogit/Node";
	ogit:mandatory-attributes (

	);
	ogit:optional-attributes (
		ogit:connectorId
		ogit:creationTime
		ogit:endOfWarranty
		ogit:id
		ogit:ipAddress
		ogit:macAddress
		ogit:manufacturer
		ogit:modificationTime
		ogit:name
		ogit:serialNumber
		ogit.Automation:additionalMacAddress
		ogit.Automation:adminUrl
		ogit.Automation:appInfrastructureType
		ogit.Automation:appInstanceType
		ogit.Automation:appServer
		ogit.Automation:basicConfigId
		ogit.Automation:brand
		ogit.Automation:buildName
		ogit.Automation:buildType
		ogit.Automation:companyName
		ogit.Automation:contextPath
		ogit.Automation:cpuCoreCount
		ogit.Automation:cpuCount
		ogit.Automation:cpuManufacturer
		ogit.Automation:cpuModel
		ogit.Automation:cpuSpeed
		ogit.Automation:cpuType
		ogit.Automation:databaseSchema
		ogit.Automation:databaseServer
		ogit.Automation:dataClassification
		ogit.Automation:dataPrivacy
		ogit.Automation:deployStatus
		ogit.Automation:diskCount
		ogit.Automation:diskSpace
		ogit.Automation:domain
		ogit.Automation:exchangeRate
		ogit.Automation:firewallStatus
		ogit.Automation:firmwareVersion
		ogit.Automation:fqdn
		ogit.Automation:host
		ogit.Automation:installCount
		ogit.Automation:installPath
		ogit.Automation:isDeployed
		ogit.Automation:licenseAvailability
		ogit.Automation:licenseName
		ogit.Automation:licenseType
		ogit.Automation:lifecycle
		ogit.Automation:marsNodeFormalRepresentation
		ogit.Automation:marsNodeType
		ogit.Automation:memory
		ogit.Automation:middlewareType
		ogit.Automation:moveToProductionAt
		ogit.Automation:objectIdentifier
		ogit.Automation:osKey
		ogit.Automation:osLicense
		ogit.Automation:osManufacturer
		ogit.Automation:osName
		ogit.Automation:osServicePack
		ogit.Automation:osVersion
		ogit.Automation:patchNumber
		ogit.Automation:portNumber
		ogit.Automation:portNumberListener
		ogit.Automation:projectName
		ogit.Automation:serialNumber
		ogit.Automation:serviceId
		ogit.Automation:serviceName
		ogit.Automation:serviceStatus
		ogit.Automation:serviceType
		ogit.Automation:servletClass
		ogit.Automation:servletName
		ogit.Automation:software
		ogit.Automation:softwareKey
		ogit.Automation:systemClass
		ogit.Automation:systemType
		ogit.Automation:tcpPort
		ogit.Automation:virtualMachineName
		ogit.Automation:virtualSystemName
		ogit.Automation:virtualSystemType
		ogit.Automation:webServer
		ogit.Datacenter:rackUnit
	);
	ogit:indexed-attributes (
		ogit:name
		ogit.Automation:marsNodeFormalRepresentation
	);
.
